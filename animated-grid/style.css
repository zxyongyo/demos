* {
  box-sizing: border-box;
}

body {
  font-family: Merriweather, serif;
  margin: 0;
  padding: 1rem;
  display: grid;
  place-items: center;
  min-height: 100vh;
  background: #1b1f21;
  font-size: clamp(1rem, 2vw, 3rem);
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: translate3d(100%, 0, 0);
  transition: transform 300ms;
  pointer-events: none;
}

.img-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
}

.grid {
  --track: 1;
  display: grid;
  max-width: 85rem;
  width: 100%;
  transition: grid-template 300ms;
}

.item {
  --i: 0.5rem;
  --c1: deeppink;
  --c2: orange;

  background: repeating-linear-gradient(
    var(--a, 45deg),
    var(--c1),
    var(--c1) var(--i),
    var(--c2) var(--i),
    var(--c2) calc(var(--i) * 2)
  );
  display: grid;
  place-items: center;
  grid-template: 1fr / 1fr var(--innerTrack, 0);
  overflow: hidden;
  aspect-ratio: 8 / 3;
  transition: filter 200ms;
}

@supports (selector(:has(.item))) {
  .item:hover {
    --innerTrack: 1fr;
    grid-template: 1fr / 1fr var(--innerTrack, 0);
  }
}

.item:hover img {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}

.item:nth-child(2),
.item:nth-child(3) {
  --c2: darkorchid;
  --p: 50% 100%;
  background: repeating-radial-gradient(
    circle at var(--p),
    var(--c1),
    var(--c1) var(--i),
    var(--c2) var(--i),
    var(--c2) calc(var(--i) * 2)
  );
}

.item:nth-child(3) {
  --p: 50% 0;
  --c1: cornflowerblue;
}

.item:nth-child(4) {
  --a: -45deg;
  --c1: cornflowerblue;
  --c2: turquoise;
}

.item p {
  background: black;
  color: white;
  padding: 0.5rem 0.75rem;
  transition: opacity 300ms;
}

.grid:has(.item:hover) .item:not(:hover) {
  filter: brightness(250%) contrast(30%);
}

.grid:has(.item:hover) .item:not(:hover) p {
  opacity: 0;
}

@media (min-width: 40em) {
  .grid {
    grid-template: var(--r1, 1fr) var(--r2, 1fr) / var(--c1, 1fr) var(--c2, 1fr);
    aspect-ratio: 2 / 1;
  }

  .item {
    aspect-ratio: auto;
  }

  .grid:has(.item:first-child:hover) {
    --r1: 2fr;
    --c1: 2fr;
  }

  .grid:has(.item:nth-child(2):hover) {
    --r1: 2fr;
    --c2: 2fr;
  }

  .grid:has(.item:nth-child(3):hover) {
    --r2: 2fr;
    --c1: 2fr;
  }

  .grid:has(.item:nth-child(4):hover) {
    --r2: 2fr;
    --c2: 2fr;
  }
}
